; define make-queue
(define (make-queue)
 (let ((front-ptr '())
       (rear-ptr '()))
  (define (insert-queue! item)
   (let ((newitem (cons item '())))
    (if (null? front-ptr)
        (begin (set! front-ptr newitem))
               (set! rear-ptr newitem)
               front-ptr)
        (begin (set-cdr! rear-ptr newitem))
               (set! rear-ptr newitem)
               front-ptr))
  (define (delete-queue!)
   (if (null? front-ptr)
       (error "DELETE! called with an empty queue")
       (begin (set! front-ptr (cdr front-ptr))
              front-ptr)))
  (define (dispatch m)
   (cond ((eq? m 'insert-queue!) (insert-queue!))
         ((eq? m 'delete-queue!) (delete-queue!))
         ((eq? m 'empty-queue?) (null? front-ptr))
         (else (error "unknown operation"))))
    dispatch))

